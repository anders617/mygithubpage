{"version":3,"sources":["components/DateLineChart/DateLineChart.jsx","components/Card/Card.jsx","components/TwoColumnList/TwoColumnList.jsx","components/ChartGrid/ChartGrid.jsx","components/ChartHeader/ChartHeader.jsx","components/ChartDescription/ChartDescription.jsx","components/Section/Section.jsx","components/TableOfContents/TableOfContents.jsx","api/mdiningservice.js","api/calculations.js","components/ChartContainer/ChartContainer.jsx","components/ShareContainer/ShareContainer.jsx","components/Footer/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["lineCurveType","curveLinear","xAccessor","d","x","yAccessor","y","DateLineChart","height","data","width","title","yLabel","className","style","minWidth","flexBasis","margin","flexGrow","flexShrink","options","max","scale","ParentSize","xMax","yMax","xScale","scaleTime","range","domain","extent","yScale","scaleLinear","GradientOrangeRed","id","vertical","GradientPinkBlue","rx","fill","Text","fontFamily","fontWeight","fontSize","verticalAnchor","textAnchor","LinePath","stroke","strokeWidth","curve","Group","AxisLeft","left","label","labelProps","numTicks","tickStroke","tickLabelProps","value","index","dx","dy","AxisBottom","top","cardStyle","backgroundColor","maxWidth","display","flexDirection","alignItems","borderRadius","children","Object","assign","ListEntry","leftText","rightText","key","padding","float","marginLeft","titleStyle","textAlign","listStyle","listStyleType","marginTop","color","leftItems","rightItems","items","map","leftItem","idx","Card","gridStyle","flexWrap","justifyContent","alignContent","headerStyle","text","description","Fragment","ChartHeader","ChartDescription","ChartGrid","linkStyle","marginBottom","textDecoration","Link","href","tableOfContentsStyle","tiltStyle","TableOfContents","hrefs","sections","links","paddingBottom","MDiningPromiseClient","weekdays","getFoodsByDayFiltered","summaryStats","weekdayFoodCounts","getLatestweekdayfoodcountsMap","sortedFilteredEntriesByDay","statsFoods","getFoodsList","foodTotals","_food","foodIdx","day","get","getCountsList","reduce","a","b","numberOfDaysServedOn","forEach","count","sort","filter","v","includes","getSortedFilteredEntries","entry","foodIndex","indexOf","calculateTimesServedMoreThanAverage","foods","averages","length","average","caluclateNumUniqueFoods","dates","getDatesList","uniqueFoodsData","getNumuniquefoodsList","Date","calculateTotalMealsServed","totalFoodMealsServedData","getTotalfoodmealsservedList","calculateMenuItemsPerUniqueFood","totalMenuItemsPerUniqueFoodData","ChartContainer","props","state","foodStats","error","mDiningClient","getSummaryStats","SummaryStatsRequest","then","res","setState","getStats","catch","code","this","entries","totalFoodMealsServed","allergenCountsMap","getAllergencountsMap","allergens","_count","allergen","push","allergenData","cleanCount","isNaN","calculateAllergenProportions","renderChart","attributeCountsMap","getAttributecountsMap","attributes","attr","attributeData","attribute","calculateAttributeProportions","n","timesServedMoreThanAverage","topFiveFoods","_day","slice","reverse","topFive","names","e","counts","calculateTopNFoodsByWeekday","TwoColumnList","isFinite","toFixed","calculateBottomNFoodsByWeekday","verticalAlign","lineHeight","renderError","weekdaysTopFiveFoods","renderTopFiveFoodsCharts","weekdaysBottomFiveFoods","renderBottomFiveFoodsCharts","attributeCharts","renderAttributeCharts","allergenCharts","renderAllergenCharts","overallCharts","renderUniqueFoodChart","renderTotalFoodServingsChart","renderTotalFoodServingsPerUniqueFoodChart","overallDesc","mostServedDesc","leastServedDesc","attributeDesc","titles","section","withTableOfContents","Section","Component","buttonStyle","cursor","ShareContainer","url","size","round","body","FacebookShareButton","quote","FacebookIcon","LinkedinShareButton","windowWidth","windowHeight","LinkedinIcon","TwitterShareButton","TwitterIcon","TelegramShareButton","TelegramIcon","WhatsappShareButton","separator","WhatsappIcon","RedditShareButton","RedditIcon","TumblrShareButton","TumblrIcon","EmailShareButton","subject","EmailIcon","Footer","target","rel","App","window","location","fontStyle","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f779837d.chunk.js","sourcesContent":["import React from 'react';\nimport Tilt from 'react-tilt';\nimport { GradientPinkBlue, GradientOrangeRed } from '@vx/gradient';\nimport { ParentSize } from '@vx/responsive';\nimport { LinePath } from '@vx/shape';\nimport { scaleLinear, scaleTime } from '@vx/scale';\nimport { curveLinear } from '@vx/curve';\nimport { Group } from '@vx/group';\nimport { AxisLeft, AxisBottom } from '@vx/axis';\nimport { Text } from '@vx/text';\nimport { extent, max } from 'd3-array';\n\nconst axisColor = '#FFFFFF';//'#282c34';\nconst graphBackgroundColor = '#32deaa';\nconst leftInset = 75;\nconst rightInset = 50;\nconst bottomInset = 60;\nconst topInset = 70;\nconst lineCurveType = curveLinear;\nconst lineStrokeWidth = 1.35;\n\nconst xAccessor = (d) => d.x\nconst yAccessor = (d) => d.y\n\nfunction DateLineChart({ height, width, data, title, yLabel }) {\n  return (\n    <div className=\"DateLineChart\" style={{ height: height, minWidth: '300px', flexBasis: '0px', margin: '15px', flexGrow: 1, flexShrink: 1 }}>\n      <Tilt className=\"Tilt\" options={{ max : 5, scale: 1.05 }} style={{width: '100%', height: '100%'}}>\n        <ParentSize className=\"graph-container\">\n          {({ width, height }) => {\n            // bounds\n            const xMax = width - rightInset;\n            const xMin = leftInset;\n            const yMax = height - bottomInset;\n            const yMin = topInset;\n\n            // scales\n            const xScale = scaleTime({\n              range: [xMin, xMax],\n              domain: extent(data, xAccessor)\n            });\n            const yScale = scaleLinear({\n              range: [yMax, yMin],\n              domain: [0, max(data, yAccessor)]\n            });\n            return (\n              <svg width={width} height={height}>\n                <GradientOrangeRed id=\"Background\" vertical={true} />\n                <GradientPinkBlue id=\"Title\" vertical={false} />\n                <rect x={0} y={0} width={width} height={height} rx={10} fill={graphBackgroundColor} />\n                <Text style={{ fontFamily: 'Arial', fontWeight: 600, fontSize: '22px' }} fill={'#FFFFFF'} verticalAnchor=\"start\" textAnchor=\"middle\" x={width / 2} y={20} width={width === 0 ? 1 : width}>{title}</Text>\n                <LinePath\n                  data={data}\n                  x={d => xScale(xAccessor(d))}\n                  y={d => yScale(yAccessor(d))}\n                  stroke={axisColor}\n                  strokeWidth={lineStrokeWidth}\n                  curve={lineCurveType}\n                />\n                <Group>\n                  <AxisLeft\n                    left={leftInset}\n                    scale={yScale}\n                    label={yLabel}\n                    labelProps={{\n                      fill: axisColor,\n                      textAnchor: 'middle',\n                      fontSize: 14,\n                      fontWeight: 600,\n                    }}\n                    numTicks={5}\n                    stroke={axisColor}\n                    tickStroke={axisColor}\n                    tickLabelProps={(value, index) => ({\n                      fill: axisColor,\n                      textAnchor: 'end',\n                      fontSize: 12,\n                      fontWeight: 600,\n                      dx: '-0.25em',\n                      dy: '0.25em'\n                    })}\n                  />\n                  <AxisBottom\n                    top={height - bottomInset}\n                    scale={xScale}\n                    label=\"Date\"\n                    labelProps={{\n                      fill: axisColor,\n                      textAnchor: 'middle',\n                      fontSize: 14,\n                      fontWeight: 600,\n                    }}\n                    stroke={axisColor}\n                    tickStroke={axisColor}\n                    numTicks={5}\n                    tickLabelProps={(value, index) => ({\n                      fill: axisColor,\n                      textAnchor: 'middle',\n                      fontSize: 8,\n                      fontWeight: 600,\n                      dy: '0.25em'\n                    })}\n                  />\n                </Group>\n              </svg>\n            );\n          }}\n        </ParentSize>\n      </Tilt>\n    </div>\n  );\n}\n\nexport default DateLineChart;\n","import React from 'react';\n\nconst cardStyle = {\n    backgroundColor: '#32deaa',\n    maxWidth: '200px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'start',\n    borderRadius: '10px'\n};\n\nexport default function ({style={}, children}) {\n    return (\n        <div style={Object.assign({}, cardStyle, style)}>\n            {children}\n        </div>\n    );\n\n};\n","import React from 'react';\n\nimport Card from '../Card/Card';\n\nconst ListEntry = ({ leftText, rightText, key }) => {\n    return (\n        <li key={key} style={{ display: 'list-item', padding: 0, margin: 0, width: '100%' }}>\n            <div style={{ margin: 0, padding: 0, float: 'left' }}>\n                {leftText}\n            </div>\n            <div style={{ margin: 0, padding: 0, marginLeft: '10px', float: 'right' }}>\n                {rightText}\n            </div>\n        </li>\n    );\n}\n\nconst titleStyle = {\n    fontSize: '18pt',\n    fontWeight: '600',\n    textAlign: 'center',\n};\n\nconst listStyle = {\n    listStyleType: 'decimal',\n    textAlign: 'left',\n    padding: 0,\n    margin: 0,\n    marginLeft: '20px',\n    marginTop: '5px',\n};\n\nconst cardStyle = {\n    maxWidth: '360px',\n    padding: '15px',\n    margin: '10px',\n    borderRadius: '10px',\n    color: 'white',\n};\n\nexport default function ({ key = null, leftItems, rightItems, title, style={} }) {\n    const items = leftItems.map((leftItem, idx) => (<ListEntry key={idx} leftText={leftItem} rightText={rightItems[idx]} />));\n    return (\n        <Card style={Object.assign({}, cardStyle, style)}>\n            <span style={titleStyle}>{title}</span>\n            <ol style={listStyle}>\n                {items}\n            </ol>\n        </Card>\n    );\n};\n","import React from 'react';\n\nconst gridStyle = { \n    display: 'flex', \n    flexWrap: 'wrap', \n    justifyContent: 'space-evenly', \n    alignContent: 'space-around', \n    width: '100vw' \n};\n\nexport default function({children, style={}}) {\n    return (\n        <div className=\"ChartGrid\" style={Object.assign({}, gridStyle, style)}>\n            {children}\n        </div>\n    );\n};\n","import React from 'react';\n\nconst headerStyle = { \n    fontSize: '20pt', \n    fontWeight: '600' \n};\n\nexport default function({id, style={}, title}) {\n    return (\n        <header className=\"ChartHeader\" id={id} style={Object.assign({}, headerStyle, style)}>\n            {title}\n        </header>\n    );\n};\n","import React from 'react';\n\nconst headerStyle = { \n    fontSize: '12pt', \n    fontWeight: '400',\n    color: 'gray'\n};\n\nexport default function({style={}, text = null}) {\n    if (!text) return ('')\n    return (\n        <header className=\"ChartDescription\" style={Object.assign({}, headerStyle, style)}>\n            {text}\n        </header>\n    );\n};\n","import React from 'react';\n\nimport ChartGrid from '../ChartGrid/ChartGrid';\nimport ChartHeader from '../ChartHeader/ChartHeader';\nimport ChartDescription from '../ChartDescription/ChartDescription';\n\nexport default ({title, id, children, description = null}) => {\n    return (\n        <React.Fragment>\n            <ChartHeader title={title} id={id} />\n            <ChartDescription text={description} />\n            <ChartGrid>\n                {children}\n            </ChartGrid>\n        </React.Fragment>\n    );\n};\n","import React from 'react';\nimport Tilt from 'react-tilt';\n\nimport Card from '../Card/Card';\n\nconst linkStyle = {\n    marginBottom: '10px',\n    marginLeft: '20px',\n    color: 'white',\n    textDecoration: 'none',\n    fontWeight: 600\n};\n\nconst Link = ({ href, title, id }) => {\n    return (\n        <a id={id} href={href} style={linkStyle}>\n            {title}\n        </a>\n    );\n};\n\nconst tableOfContentsStyle = {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: '20px'\n};\n\nconst tiltStyle = {\n    flexBasis: '300px',\n};\n\nconst headerStyle = {\n    marginLeft: '15px',\n    marginBottom: '10px'\n};\n\nconst TableOfContents = ({ hrefs, sections, title }) => {\n    const links = hrefs.map((href, idx) => (<Link href={href} title={sections[idx]} key={idx} />));\n    return (\n        <div className=\"TableOfContents\" style={tableOfContentsStyle}>\n            <Tilt className=\"Tilt\" options={{ max: 5, scale: 1.05 }} style={tiltStyle}>\n                <Card style={{paddingBottom: '10px', maxWidth: '300px'}}>\n                    <h3 style={headerStyle}>{title}</h3>\n                    {links}\n                </Card>\n            </Tilt>\n        </div>\n    );\n};\n\nconst withTableOfContents = (sections, title) => {\n    let hrefs = [];\n    let titles = [];\n    sections.forEach((section) => {\n        const { id, title } = section.props;\n        hrefs.push(`#${id}`);\n        titles.push(title);\n    });\n    return (\n        <React.Fragment>\n            <TableOfContents hrefs={hrefs} sections={titles} title={title} />\n            {sections}\n        </React.Fragment>\n    );\n};\n\nexport { withTableOfContents };\nexport default TableOfContents;\n","import { MDiningPromiseClient } from 'mdining-proto';\nexport default new MDiningPromiseClient('https://michigan-dining-api.tendiesti.me');\n","const weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\nconst getFoodsByDayFiltered = (summaryStats) => {\n    const weekdayFoodCounts = summaryStats.getLatestweekdayfoodcountsMap();\n    const sortedFilteredEntriesByDay = {};\n    const statsFoods = summaryStats.getFoodsList();\n    const getSortedFilteredEntries = (day) => weekdayFoodCounts.get(day).getCountsList().map((count, idx) => ([statsFoods[idx], count]))\n        .sort((a, b) => a[1] - b[1])\n        .filter((v) => !v[0].includes('no service at this time'));\n    const foodTotals = statsFoods.map((_food, foodIdx) => {\n        return weekdays.map((day) => weekdayFoodCounts.get(day).getCountsList()[foodIdx])\n                      .reduce((a, b) => a + b, 0);\n    });\n    const numberOfDaysServedOn = statsFoods.map((_food, foodIdx) => {\n        return weekdays.map((day) => weekdayFoodCounts.get(day).getCountsList()[foodIdx] > 0 ? 1 : 0)\n                       .reduce((a, b) => a + b, 0);\n    });\n    weekdays.forEach((day) => {\n        sortedFilteredEntriesByDay[day] = getSortedFilteredEntries(day)\n            .map((entry) => ({ entry: entry, foodIndex: statsFoods.indexOf(entry[0]) }))\n            .filter((v) => numberOfDaysServedOn[v.foodIndex] > 4)\n            .filter((v) => foodTotals[v.foodIndex] > 100)\n            .map((v) => v.entry);\n    })\n    return sortedFilteredEntriesByDay;\n}\n\nconst calculateTimesServedMoreThanAverage = (summaryStats) => {\n    const weekdayFoodCounts = summaryStats.getLatestweekdayfoodcountsMap();\n    const sortedFilteredEntriesByDay = getFoodsByDayFiltered(summaryStats);\n    const foods = summaryStats.getFoodsList();\n    // Average times served per day\n    const averages = foods.map((_food, foodIdx) => {\n        return weekdays.map((day) => weekdayFoodCounts.get(day).getCountsList()[foodIdx])\n                       .reduce((a, b) => a + b, 0) / weekdays.length;\n    });\n    return weekdays.map((day) => {\n        return sortedFilteredEntriesByDay[day]\n            .map((entry) => {\n                const average = averages[foods.indexOf(entry[0])];\n                return [entry[0], (average === 0 ? 0 : entry[1]) / average]\n            });\n    });\n}\n\nconst calculateBottomNFoodsByWeekday = (summaryStats, n = 5) => {\n    const timesServedMoreThanAverage = calculateTimesServedMoreThanAverage(summaryStats);\n    const topFiveFoods = weekdays.map((_day, idx) => {\n        return timesServedMoreThanAverage[idx]\n            .filter((entry) => entry[1] < 1)\n            .sort((a, b) => b[1] - a[1])\n            .slice(-n)\n            .map((entry) => [entry[0], 1 / entry[1]])\n            .reverse();\n    }).map((topFive) => ({ names: topFive.map((e) => e[0]), counts: topFive.map((e) => e[1]) }));\n    const map = {};\n    weekdays.forEach((day, idx) => {\n        const topFive = topFiveFoods[idx];\n        map[day] = { names: topFive.names, counts: topFive.counts };\n    });\n    return map;\n};\n\n/// Returns object of form  {'Monday': {name: 'Orange', count: 3}}\nconst calculateTopNFoodsByWeekday = (summaryStats, n = 5) => {\n    const timesServedMoreThanAverage = calculateTimesServedMoreThanAverage(summaryStats);\n    const topFiveFoods = weekdays.map((_day, idx) => {\n        return timesServedMoreThanAverage[idx]\n            .filter((entry) => entry[1] > 1)\n            .sort((a, b) => a[1] - b[1])\n            .slice(-n)\n            .reverse();\n    }).map((topFive) => ({ names: topFive.map((e) => e[0]), counts: topFive.map((e) => e[1]) }));\n    const map = {};\n    weekdays.forEach((day, idx) => {\n        const topFive = topFiveFoods[idx];\n        map[day] = { names: topFive.names, counts: topFive.counts };\n    });\n    return map;\n};\n\n// Returns map from allergen to an array of data of form {x: Date, y: Number}\nconst calculateAllergenProportions = (summaryStats) => {\n    const dates = summaryStats.getDatesList();\n    const totalFoodMealsServed = summaryStats.getTotalfoodmealsservedList();\n    const allergenCountsMap = summaryStats.getAllergencountsMap();\n    const allergens = [];\n    if (dates.length > 0) {\n        allergenCountsMap.forEach((_count, allergen) => {\n            allergens.push(allergen);\n        });\n    }\n    const allergenData = allergens.map((allergen) => {\n        const data = allergenCountsMap.get(allergen).getCountsList().map((count, idx) => {\n            const cleanCount = isNaN(count) ? -1 : count;\n            return { x: new Date(dates[idx]), y: 100 * cleanCount / totalFoodMealsServed[idx] };\n        }).filter((d) => d.y >= 0);\n        data.sort((a, b) => a.x - b.x);\n        return data;\n    });\n    const map = {};\n    allergens.forEach((allergen, idx) => map[allergen] = allergenData[idx]);\n    return map;\n};\n\n// Returns map from attribute to an array of data of form {x: Date, y: Number}\nconst calculateAttributeProportions = (summaryStats) => {\n    const dates = summaryStats.getDatesList();\n    const totalFoodMealsServed = summaryStats.getTotalfoodmealsservedList();\n    const attributeCountsMap = summaryStats.getAttributecountsMap();\n    const attributes = [];\n    if (dates.length > 0) {\n        attributeCountsMap.forEach((_count, attr) => {\n            attributes.push(attr);\n        });\n    }\n    const attributeData = attributes.map((attribute) => {\n        const data = attributeCountsMap.get(attribute).getCountsList().map((count, idx) => {\n            const cleanCount = isNaN(count) ? 0 : count;\n            return { x: new Date(dates[idx]), y: 100 * cleanCount / totalFoodMealsServed[idx] };\n        }).filter((d) => d.y >= 0);;\n        data.sort((a, b) => a.x - b.x);\n        return data;\n    });\n    const map = {};\n    attributes.forEach((attribute, idx) => map[attribute] = attributeData[idx]);\n    return map;\n};\n\n// Returns an array of entries of form {x: Date, y: Number}\nconst caluclateNumUniqueFoods = (summaryStats) => {\n    const dates = summaryStats.getDatesList();\n    const numUniqueFoods = summaryStats.getNumuniquefoodsList();\n    const uniqueFoodsData = numUniqueFoods.map((count, idx) => ({ x: new Date(dates[idx]), y: count }));\n    uniqueFoodsData.sort((a, b) => a.x - b.x);\n    return uniqueFoodsData;\n};\n\n// returns an array with entries of form {x: Date, y: Number}\nconst calculateTotalMealsServed = (summaryStats) => {\n    const dates = summaryStats.getDatesList();\n    const totalFoodMealsServed = summaryStats.getTotalfoodmealsservedList();\n    const totalFoodMealsServedData = totalFoodMealsServed.map((count, idx) => ({ x: new Date(dates[idx]), y: count }));\n    totalFoodMealsServedData.sort((a, b) => a.x - b.x);\n    return totalFoodMealsServedData;\n};\n\n// returns an array with entries of form {x: Date, y: Number}\nconst calculateMenuItemsPerUniqueFood = (summaryStats) => {\n    const uniqueFoodsData = caluclateNumUniqueFoods(summaryStats);\n    const totalMenuItemsPerUniqueFoodData = calculateTotalMealsServed(summaryStats).map((data, idx) => {\n        if (uniqueFoodsData[idx].y === 0) {\n            return { x: data.x, y: 0 };\n        }\n        return { x: data.x, y: data.y / uniqueFoodsData[idx].y };\n    });\n    totalMenuItemsPerUniqueFoodData.sort((a, b) => a.x - b.x);\n    return totalMenuItemsPerUniqueFoodData;\n};\n\nconst calculateFoodFrequencyByWeekday = (summaryStats, food) => {\n    const weekdayFoodCounts = summaryStats.getLatestweekdayfoodcountsMap();\n    const foodIdx = summaryStats.getFoodsList().indexOf(food);\n    return weekdays.map((day) => weekdayFoodCounts.get(day).getCountsList()[foodIdx]).map((count, idx) => ({ x: weekdays[idx], y: count }));\n};\n\nexport {\n    calculateTopNFoodsByWeekday,\n    calculateBottomNFoodsByWeekday,\n    calculateAllergenProportions,\n    calculateAttributeProportions,\n    caluclateNumUniqueFoods,\n    calculateTotalMealsServed,\n    calculateMenuItemsPerUniqueFood,\n    calculateFoodFrequencyByWeekday\n};\n","import React, { Component } from 'react';\nimport { SummaryStatsRequest } from 'mdining-proto';\n\nimport DateLineChart from '../DateLineChart/DateLineChart';\nimport TwoColumnList from '../TwoColumnList/TwoColumnList';\nimport Section from '../Section/Section';\nimport { withTableOfContents } from '../TableOfContents/TableOfContents';\nimport mDiningClient from '../../api/mdiningservice';\nimport {\n    calculateTopNFoodsByWeekday,\n    calculateBottomNFoodsByWeekday,\n    calculateAllergenProportions,\n    calculateAttributeProportions,\n    caluclateNumUniqueFoods,\n    calculateTotalMealsServed,\n    calculateMenuItemsPerUniqueFood\n} from '../../api/calculations';\n\nclass ChartContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            foodStats: [],\n            summaryStats: null,\n            error: null,\n        };\n    }\n\n    componentDidMount() {\n        mDiningClient.getSummaryStats(new SummaryStatsRequest())\n            .then((res) => {\n                this.setState({ summaryStats: res.getStats(), error: null });\n            }).catch((error) => {\n                if (error.code === 14) {\n                    this.setState({ summaryStats: null, error: 'Server is processing data. Please retry in a few moments.' });\n                    return;\n                }\n                this.setState({ summaryStats: null, error });\n            });\n    }\n\n    renderChart({ key, data, title, yLabel }) {\n        return (\n            <DateLineChart\n                key={key}\n                width={'45vw'}\n                height={'260px'}\n                data={data}\n                title={title}\n                yLabel={yLabel}\n            />\n        );\n    }\n\n    renderAllergenCharts() {\n        const { summaryStats } = this.state;\n        return Object.entries(calculateAllergenProportions(summaryStats)).map((entry) => {\n            return this.renderChart({\n                key: entry[0],\n                data: entry[1],\n                title: `Percentage of Food Servings That Contain ${entry[0]}`,\n                yLabel: 'Percent'\n            });\n        });\n    }\n\n    renderAttributeCharts() {\n        const { summaryStats } = this.state;\n        return Object.entries(calculateAttributeProportions(summaryStats)).map((entry) => {\n            return this.renderChart({\n                key: entry[0],\n                data: entry[1],\n                title: `Percentage of Food Servings That Are ${entry[0]}`,\n                yLabel: 'Percent',\n            });\n        });\n    }\n\n    renderUniqueFoodChart() {\n        const { summaryStats } = this.state;\n        return this.renderChart({\n            key: 'UniqueFood',\n            data: caluclateNumUniqueFoods(summaryStats),\n            title: `Number Of Unique Foods Per Day`,\n            yLabel: 'Count',\n        });\n    }\n\n    renderTotalFoodServingsChart() {\n        const { summaryStats } = this.state;\n        return this.renderChart({\n            key: 'TotalFoodServings',\n            data: calculateTotalMealsServed(summaryStats),\n            title: `Total Menu Items Per Day`,\n            yLabel: 'Count',\n        });\n    }\n\n    renderTotalFoodServingsPerUniqueFoodChart() {\n        const { summaryStats } = this.state;\n        return this.renderChart({\n            key: 'TotalFoodServingsPerUniqueFood',\n            data: calculateMenuItemsPerUniqueFood(summaryStats),\n            title: `Average Number Of Times A Food Appears Per Day`,\n            yLabel: 'Count',\n        });\n    }\n\n    renderTopFiveFoodsCharts() {\n        const { summaryStats } = this.state;\n        return Object.entries(calculateTopNFoodsByWeekday(summaryStats, 10)).map((entry) => {\n            return (\n                <TwoColumnList\n                    title={entry[0]}\n                    leftItems={entry[1].names}\n                    rightItems={entry[1].counts.map((v) => !isFinite(v) ? 'never' : v.toFixed(2) + 'x')}\n                    key={entry[0]}\n                />\n            );\n        });\n    }\n\n    renderBottomFiveFoodsCharts() {\n        const { summaryStats } = this.state;\n        return Object.entries(calculateBottomNFoodsByWeekday(summaryStats, 10)).map((entry) => {\n            return (\n                <TwoColumnList\n                    title={entry[0]}\n                    leftItems={entry[1].names}\n                    rightItems={entry[1].counts.map((v) => !isFinite(v) ? 'never' : v.toFixed(2) + 'x')}\n                    key={entry[0]}\n                />\n            );\n        });\n    }\n\n    renderError() {\n        const { error } = this.state;\n        return (\n            <div className=\"ChartContainer\" style={{ color: 'black', fontSize: '18px', height: '80vh', verticalAlign: 'middle', lineHeight: '80vh' }}>\n                {typeof (error) === 'string' ? error : \"Something went wrong :(\"}\n            </div>\n        );\n    }\n\n    render() {\n        const { summaryStats, error } = this.state;\n        if (error !== null) {\n            return this.renderError();\n        }\n        if (!summaryStats) {\n            return (<div>Loading...</div>);\n        }\n        const weekdaysTopFiveFoods = this.renderTopFiveFoodsCharts();\n        const weekdaysBottomFiveFoods = this.renderBottomFiveFoodsCharts();\n        const attributeCharts = this.renderAttributeCharts();\n        const allergenCharts = this.renderAllergenCharts();\n        const uniqueFoodsChart = this.renderUniqueFoodChart();\n        const totalFoodServingsChart = this.renderTotalFoodServingsChart();\n        const totalMenuItemsPerUniqueFoodChart = this.renderTotalFoodServingsPerUniqueFoodChart();\n        const overallCharts = [uniqueFoodsChart, totalFoodServingsChart, totalMenuItemsPerUniqueFoodChart];\n        const overallDesc = (<p>A \"menu item\" is one listing of a food on a menu<br />Foods can be listed mutliple times per day(and meal)</p>)\n        const mostServedDesc = (<p>How many times more than average is a food served on a certain day of the week?<br />Notice taco Tuesday and that each day has a special soup</p>);\n        const leastServedDesc = (<p>How many times less than average is a food served on a certain day of the week?<br />\"never\" means the item has never been served on that day<br />Notice meatless(beefless?) Mondays and healthy(?) breakfasts on Tuesday</p>);\n        const attributeDesc = (<p>Strange looking areas are usually due to the dinings halls being closed</p>)\n        return withTableOfContents([\n            (<Section title={'Overall Counts'} id={'OverallCounts'} description={overallDesc} key={1}>{overallCharts}</Section>),\n            (<Section title={'Most Served By Day Of The Week'} id={'TopByDay'} description={mostServedDesc} key={4}>{weekdaysTopFiveFoods}</Section>),\n            (<Section title={'Least Served By Day Of The Week'} id={'BottomByDay'} description={leastServedDesc} key={5}>{weekdaysBottomFiveFoods}</Section>),\n            (<Section title={'Attribute Metrics'} id={'Attributes'} description={attributeDesc} key={2}>{attributeCharts}</Section>),\n            (<Section title={'Allergen Metrics'} id={'Allergens'} key={3}>{allergenCharts}</Section>),\n        ], 'Sections');\n    }\n}\n\nexport default ChartContainer;\n","import React from 'react';\nimport {\n    // Buttons\n    FacebookShareButton,\n    LinkedinShareButton,\n    TwitterShareButton,\n    TelegramShareButton,\n    WhatsappShareButton,\n    RedditShareButton,\n    TumblrShareButton,\n    EmailShareButton,\n    // Icons\n    FacebookIcon,\n    LinkedinIcon,\n    TwitterIcon,\n    TelegramIcon,\n    WhatsappIcon,\n    RedditIcon,\n    TumblrIcon,\n    EmailIcon,\n} from 'react-share';\n\nconst buttonStyle = {\n    margin: '3px',\n    cursor: 'pointer',\n};\n\nconst ShareContainer = ({ url, size = 32, round = true, title = '', body = '' }) => {\n    return (\n        <div className=\"ShareContainer\" style={{display: 'flex', justifyContent: 'center'}}>\n            <FacebookShareButton \n                url={url} \n                quote={title}\n                style={buttonStyle}\n            >\n                <FacebookIcon size={size} round={round} />\n            </FacebookShareButton>\n            <LinkedinShareButton \n                url={url} \n                windowWidth={750}\n                windowHeight={600}\n                style={buttonStyle}\n            >\n                <LinkedinIcon size={size} round={round} />\n            </LinkedinShareButton>\n            <TwitterShareButton \n                url={url} \n                title={title}\n                style={buttonStyle}\n            >\n                <TwitterIcon size={size} round={round} />\n            </TwitterShareButton>\n            <TelegramShareButton \n                url={url} \n                title={title}\n                style={buttonStyle}\n            >\n                <TelegramIcon size={size} round={round} />\n            </TelegramShareButton>\n            <WhatsappShareButton \n                url={url} \n                title={title}\n                separator={':: '}\n                style={buttonStyle}\n            >\n                <WhatsappIcon size={size} round={round} />\n            </WhatsappShareButton>\n            <RedditShareButton \n                url={url} \n                title={title}\n                windowWidth={660}\n                windowHeight={460}\n                style={buttonStyle}\n            >\n                <RedditIcon size={size} round={round} />\n            </RedditShareButton>\n            <TumblrShareButton \n                url={url} \n                title={title}\n                windowWidth={660}\n                windowHeight={460}\n                style={buttonStyle}\n            >\n                <TumblrIcon size={size} round={round} />\n            </TumblrShareButton>\n            <EmailShareButton \n                url={url} \n                subject={title}\n                body={body}\n                style={buttonStyle}\n            >\n                <EmailIcon size={size} round={round} />\n            </EmailShareButton>\n        </div>\n    )\n}\n\nexport default ShareContainer;\n","import React from 'react';\nimport { GoMarkGithub } from \"react-icons/go\";\n\nconst githubUrl = 'https://github.com/anders617/tendiestime';\nconst websiteUrl = 'https://andersboberg.com';\n\nconst linkStyle = {\n    color: '#000000', \n    textDecoration: 'none',\n};\n\nconst Footer = (props) => {\n    return (\n        <div className=\"Footer\" style={{ margin: '10px' }}>\n            <a href={githubUrl} target=\"_blank\" rel=\"noopener noreferrer\" style={linkStyle}>\n                <GoMarkGithub size={32} />\n                <p style={{fontSize: '8pt', fontWeight: '600', marginTop: '2px'}}>\n                    View Me On Github\n                </p>\n            </a>\n            <p style={{fontSize: '8pt', fontWeight: '600'}}>\n                &copy; 2019-2020 <a href={websiteUrl} target=\"_blank\" rel=\"noopener noreferrer\" style={linkStyle} >Anders Boberg</a>\n            </p>\n        </div>\n    );\n}\n\nexport default Footer;\n","import React from 'react';\nimport './App.css';\nimport ChartContainer from './components/ChartContainer/ChartContainer';\nimport ShareContainer from './components/ShareContainer/ShareContainer';\nimport Footer from './components/Footer/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div style={{color: '#000000', marginTop: '20px'}}>\n          <ShareContainer url={window.location.href} size={32} title={'MDining Stats! from tendiesti.me'} body={'Check this out!'} />\n        </div>\n        <h1 style={{color: '#000000', fontSize: '24px', fontWeight: '900', fontFamily: 'Arial', margin: '10px', marginBottom: '0px'}}>\n          MDining Stats!\n        </h1>\n        <h2 style={{color: '#3F3F3F', fontSize: '16px', fontWeight: '200', fontFamily: 'Arial', fontStyle: 'italic', margin: '20px', marginTop: '5px'}}>\n          Updated Daily <br />\n          <p>Charts and statistics on food being served at University of Michigan dining halls.</p>\n          <p>If you are looking for michigan dining hall menus check out the <a href=\"/menu\">menus page</a></p>\n          <p>If you are looking for a searchable list of food check out <a href=\"/\">tendiestime</a></p>\n        </h2>\n      </header>\n      <ChartContainer />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}