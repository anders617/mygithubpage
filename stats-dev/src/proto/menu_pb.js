/* eslint-disable */
// source: proto/menu.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.mdining.Category', null, global);
goog.exportSymbol('proto.mdining.ItemSizes', null, global);
goog.exportSymbol('proto.mdining.Menu', null, global);
goog.exportSymbol('proto.mdining.MenuItem', null, global);
goog.exportSymbol('proto.mdining.NutritionalInfo', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mdining.Menu = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mdining.Menu.repeatedFields_, null);
};
goog.inherits(proto.mdining.Menu, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mdining.Menu.displayName = 'proto.mdining.Menu';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mdining.Category = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mdining.Category.repeatedFields_, null);
};
goog.inherits(proto.mdining.Category, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mdining.Category.displayName = 'proto.mdining.Category';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mdining.MenuItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mdining.MenuItem.repeatedFields_, null);
};
goog.inherits(proto.mdining.MenuItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mdining.MenuItem.displayName = 'proto.mdining.MenuItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mdining.ItemSizes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mdining.ItemSizes.repeatedFields_, null);
};
goog.inherits(proto.mdining.ItemSizes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mdining.ItemSizes.displayName = 'proto.mdining.ItemSizes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mdining.NutritionalInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mdining.NutritionalInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mdining.NutritionalInfo.displayName = 'proto.mdining.NutritionalInfo';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mdining.Menu.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mdining.Menu.prototype.toObject = function(opt_includeInstance) {
  return proto.mdining.Menu.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mdining.Menu} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mdining.Menu.toObject = function(includeInstance, msg) {
  var f, obj = {
    meal: jspb.Message.getFieldWithDefault(msg, 1, ""),
    date: jspb.Message.getFieldWithDefault(msg, 2, ""),
    formatteddate: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ratingcount: jspb.Message.getFieldWithDefault(msg, 4, 0),
    ratingscore: jspb.Message.getFieldWithDefault(msg, 5, 0),
    hascategories: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    description: jspb.Message.getFieldWithDefault(msg, 7, ""),
    categoryList: jspb.Message.toObjectList(msg.getCategoryList(),
    proto.mdining.Category.toObject, includeInstance),
    dininghallname: jspb.Message.getFieldWithDefault(msg, 9, ""),
    dininghallmeal: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mdining.Menu}
 */
proto.mdining.Menu.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mdining.Menu;
  return proto.mdining.Menu.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mdining.Menu} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mdining.Menu}
 */
proto.mdining.Menu.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMeal(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFormatteddate(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRatingcount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRatingscore(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHascategories(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 8:
      var value = new proto.mdining.Category;
      reader.readMessage(value,proto.mdining.Category.deserializeBinaryFromReader);
      msg.addCategory(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDininghallname(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDininghallmeal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mdining.Menu.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mdining.Menu.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mdining.Menu} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mdining.Menu.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMeal();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDate();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFormatteddate();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRatingcount();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getRatingscore();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getHascategories();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCategoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.mdining.Category.serializeBinaryToWriter
    );
  }
  f = message.getDininghallname();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getDininghallmeal();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string meal = 1;
 * @return {string}
 */
proto.mdining.Menu.prototype.getMeal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mdining.Menu} returns this
 */
proto.mdining.Menu.prototype.setMeal = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string date = 2;
 * @return {string}
 */
proto.mdining.Menu.prototype.getDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mdining.Menu} returns this
 */
proto.mdining.Menu.prototype.setDate = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string formattedDate = 3;
 * @return {string}
 */
proto.mdining.Menu.prototype.getFormatteddate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.mdining.Menu} returns this
 */
proto.mdining.Menu.prototype.setFormatteddate = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 ratingCount = 4;
 * @return {number}
 */
proto.mdining.Menu.prototype.getRatingcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.mdining.Menu} returns this
 */
proto.mdining.Menu.prototype.setRatingcount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 ratingScore = 5;
 * @return {number}
 */
proto.mdining.Menu.prototype.getRatingscore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.mdining.Menu} returns this
 */
proto.mdining.Menu.prototype.setRatingscore = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool hasCategories = 6;
 * @return {boolean}
 */
proto.mdining.Menu.prototype.getHascategories = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mdining.Menu} returns this
 */
proto.mdining.Menu.prototype.setHascategories = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string description = 7;
 * @return {string}
 */
proto.mdining.Menu.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.mdining.Menu} returns this
 */
proto.mdining.Menu.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated Category category = 8;
 * @return {!Array<!proto.mdining.Category>}
 */
proto.mdining.Menu.prototype.getCategoryList = function() {
  return /** @type{!Array<!proto.mdining.Category>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mdining.Category, 8));
};


/**
 * @param {!Array<!proto.mdining.Category>} value
 * @return {!proto.mdining.Menu} returns this
*/
proto.mdining.Menu.prototype.setCategoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.mdining.Category=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mdining.Category}
 */
proto.mdining.Menu.prototype.addCategory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.mdining.Category, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mdining.Menu} returns this
 */
proto.mdining.Menu.prototype.clearCategoryList = function() {
  return this.setCategoryList([]);
};


/**
 * optional string diningHallName = 9;
 * @return {string}
 */
proto.mdining.Menu.prototype.getDininghallname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.mdining.Menu} returns this
 */
proto.mdining.Menu.prototype.setDininghallname = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string diningHallMeal = 10;
 * @return {string}
 */
proto.mdining.Menu.prototype.getDininghallmeal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.mdining.Menu} returns this
 */
proto.mdining.Menu.prototype.setDininghallmeal = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mdining.Category.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mdining.Category.prototype.toObject = function(opt_includeInstance) {
  return proto.mdining.Category.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mdining.Category} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mdining.Category.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    menuitemList: jspb.Message.toObjectList(msg.getMenuitemList(),
    proto.mdining.MenuItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mdining.Category}
 */
proto.mdining.Category.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mdining.Category;
  return proto.mdining.Category.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mdining.Category} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mdining.Category}
 */
proto.mdining.Category.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.mdining.MenuItem;
      reader.readMessage(value,proto.mdining.MenuItem.deserializeBinaryFromReader);
      msg.addMenuitem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mdining.Category.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mdining.Category.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mdining.Category} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mdining.Category.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMenuitemList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.mdining.MenuItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.mdining.Category.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mdining.Category} returns this
 */
proto.mdining.Category.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated MenuItem menuItem = 2;
 * @return {!Array<!proto.mdining.MenuItem>}
 */
proto.mdining.Category.prototype.getMenuitemList = function() {
  return /** @type{!Array<!proto.mdining.MenuItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mdining.MenuItem, 2));
};


/**
 * @param {!Array<!proto.mdining.MenuItem>} value
 * @return {!proto.mdining.Category} returns this
*/
proto.mdining.Category.prototype.setMenuitemList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.mdining.MenuItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mdining.MenuItem}
 */
proto.mdining.Category.prototype.addMenuitem = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.mdining.MenuItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mdining.Category} returns this
 */
proto.mdining.Category.prototype.clearMenuitemList = function() {
  return this.setMenuitemList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mdining.MenuItem.repeatedFields_ = [2,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mdining.MenuItem.prototype.toObject = function(opt_includeInstance) {
  return proto.mdining.MenuItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mdining.MenuItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mdining.MenuItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    attributeList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    ratingcount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    ratingscore: jspb.Message.getFieldWithDefault(msg, 4, 0),
    allergensList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    itemsizesList: jspb.Message.toObjectList(msg.getItemsizesList(),
    proto.mdining.ItemSizes.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mdining.MenuItem}
 */
proto.mdining.MenuItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mdining.MenuItem;
  return proto.mdining.MenuItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mdining.MenuItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mdining.MenuItem}
 */
proto.mdining.MenuItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addAttribute(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRatingcount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRatingscore(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addAllergens(value);
      break;
    case 6:
      var value = new proto.mdining.ItemSizes;
      reader.readMessage(value,proto.mdining.ItemSizes.deserializeBinaryFromReader);
      msg.addItemsizes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mdining.MenuItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mdining.MenuItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mdining.MenuItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mdining.MenuItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAttributeList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getRatingcount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getRatingscore();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getAllergensList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getItemsizesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.mdining.ItemSizes.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.mdining.MenuItem.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mdining.MenuItem} returns this
 */
proto.mdining.MenuItem.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string attribute = 2;
 * @return {!Array<string>}
 */
proto.mdining.MenuItem.prototype.getAttributeList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.mdining.MenuItem} returns this
 */
proto.mdining.MenuItem.prototype.setAttributeList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.mdining.MenuItem} returns this
 */
proto.mdining.MenuItem.prototype.addAttribute = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mdining.MenuItem} returns this
 */
proto.mdining.MenuItem.prototype.clearAttributeList = function() {
  return this.setAttributeList([]);
};


/**
 * optional int32 ratingCount = 3;
 * @return {number}
 */
proto.mdining.MenuItem.prototype.getRatingcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.mdining.MenuItem} returns this
 */
proto.mdining.MenuItem.prototype.setRatingcount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 ratingScore = 4;
 * @return {number}
 */
proto.mdining.MenuItem.prototype.getRatingscore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.mdining.MenuItem} returns this
 */
proto.mdining.MenuItem.prototype.setRatingscore = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated string allergens = 5;
 * @return {!Array<string>}
 */
proto.mdining.MenuItem.prototype.getAllergensList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.mdining.MenuItem} returns this
 */
proto.mdining.MenuItem.prototype.setAllergensList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.mdining.MenuItem} returns this
 */
proto.mdining.MenuItem.prototype.addAllergens = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mdining.MenuItem} returns this
 */
proto.mdining.MenuItem.prototype.clearAllergensList = function() {
  return this.setAllergensList([]);
};


/**
 * repeated ItemSizes itemSizes = 6;
 * @return {!Array<!proto.mdining.ItemSizes>}
 */
proto.mdining.MenuItem.prototype.getItemsizesList = function() {
  return /** @type{!Array<!proto.mdining.ItemSizes>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mdining.ItemSizes, 6));
};


/**
 * @param {!Array<!proto.mdining.ItemSizes>} value
 * @return {!proto.mdining.MenuItem} returns this
*/
proto.mdining.MenuItem.prototype.setItemsizesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.mdining.ItemSizes=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mdining.ItemSizes}
 */
proto.mdining.MenuItem.prototype.addItemsizes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.mdining.ItemSizes, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mdining.MenuItem} returns this
 */
proto.mdining.MenuItem.prototype.clearItemsizesList = function() {
  return this.setItemsizesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mdining.ItemSizes.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mdining.ItemSizes.prototype.toObject = function(opt_includeInstance) {
  return proto.mdining.ItemSizes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mdining.ItemSizes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mdining.ItemSizes.toObject = function(includeInstance, msg) {
  var f, obj = {
    portionsize: jspb.Message.getFieldWithDefault(msg, 1, 0),
    servingsize: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nutritionalinfoList: jspb.Message.toObjectList(msg.getNutritionalinfoList(),
    proto.mdining.NutritionalInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mdining.ItemSizes}
 */
proto.mdining.ItemSizes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mdining.ItemSizes;
  return proto.mdining.ItemSizes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mdining.ItemSizes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mdining.ItemSizes}
 */
proto.mdining.ItemSizes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPortionsize(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setServingsize(value);
      break;
    case 3:
      var value = new proto.mdining.NutritionalInfo;
      reader.readMessage(value,proto.mdining.NutritionalInfo.deserializeBinaryFromReader);
      msg.addNutritionalinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mdining.ItemSizes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mdining.ItemSizes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mdining.ItemSizes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mdining.ItemSizes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPortionsize();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getServingsize();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNutritionalinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.mdining.NutritionalInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 portionSize = 1;
 * @return {number}
 */
proto.mdining.ItemSizes.prototype.getPortionsize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mdining.ItemSizes} returns this
 */
proto.mdining.ItemSizes.prototype.setPortionsize = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string servingSize = 2;
 * @return {string}
 */
proto.mdining.ItemSizes.prototype.getServingsize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mdining.ItemSizes} returns this
 */
proto.mdining.ItemSizes.prototype.setServingsize = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated NutritionalInfo nutritionalInfo = 3;
 * @return {!Array<!proto.mdining.NutritionalInfo>}
 */
proto.mdining.ItemSizes.prototype.getNutritionalinfoList = function() {
  return /** @type{!Array<!proto.mdining.NutritionalInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mdining.NutritionalInfo, 3));
};


/**
 * @param {!Array<!proto.mdining.NutritionalInfo>} value
 * @return {!proto.mdining.ItemSizes} returns this
*/
proto.mdining.ItemSizes.prototype.setNutritionalinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.mdining.NutritionalInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mdining.NutritionalInfo}
 */
proto.mdining.ItemSizes.prototype.addNutritionalinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.mdining.NutritionalInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mdining.ItemSizes} returns this
 */
proto.mdining.ItemSizes.prototype.clearNutritionalinfoList = function() {
  return this.setNutritionalinfoList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mdining.NutritionalInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.mdining.NutritionalInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mdining.NutritionalInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mdining.NutritionalInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, 0),
    units: jspb.Message.getFieldWithDefault(msg, 3, ""),
    percentdailyvalue: jspb.Message.getFieldWithDefault(msg, 4, 0),
    type: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mdining.NutritionalInfo}
 */
proto.mdining.NutritionalInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mdining.NutritionalInfo;
  return proto.mdining.NutritionalInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mdining.NutritionalInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mdining.NutritionalInfo}
 */
proto.mdining.NutritionalInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnits(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPercentdailyvalue(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mdining.NutritionalInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mdining.NutritionalInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mdining.NutritionalInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mdining.NutritionalInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getUnits();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPercentdailyvalue();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.mdining.NutritionalInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mdining.NutritionalInfo} returns this
 */
proto.mdining.NutritionalInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 value = 2;
 * @return {number}
 */
proto.mdining.NutritionalInfo.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mdining.NutritionalInfo} returns this
 */
proto.mdining.NutritionalInfo.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string units = 3;
 * @return {string}
 */
proto.mdining.NutritionalInfo.prototype.getUnits = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.mdining.NutritionalInfo} returns this
 */
proto.mdining.NutritionalInfo.prototype.setUnits = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 percentDailyValue = 4;
 * @return {number}
 */
proto.mdining.NutritionalInfo.prototype.getPercentdailyvalue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.mdining.NutritionalInfo} returns this
 */
proto.mdining.NutritionalInfo.prototype.setPercentdailyvalue = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string type = 5;
 * @return {string}
 */
proto.mdining.NutritionalInfo.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.mdining.NutritionalInfo} returns this
 */
proto.mdining.NutritionalInfo.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


goog.object.extend(exports, proto.mdining);
